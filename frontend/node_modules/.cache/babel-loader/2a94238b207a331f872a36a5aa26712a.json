{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\nimport { signin } from \"./userActions\";\n\nconst getUser = async id => {\n  const {\n    data\n  } = await Axios.get(`/api/users/${id}`);\n  return data;\n}; // const signin = async (dispatch, email, password) => {\n//     const {data} = await Axios.post('/api/users/signin', {email, password});\n//     localStorage.setItem('userInfo', JSON.stringify(data));\n//     dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n// };\n\n\nconst getUserToken = async (dispatch, id) => {\n  const {\n    data\n  } = await Axios.get(`/api/users/userToken/${id}`);\n  debugger;\n  localStorage.setItem('userInfo', JSON.stringify(data));\n  dispatch({\n    type: 'PAY_CONFIRM_TOKEN',\n    payload: data\n  });\n};\n\nexport const payConfirm = (transactionId, userId) => async (dispatch, getState) => {\n  try {\n    const user = await getUser(userId); //以登入資料取token\n    //const login = signin(dispatch, user.email, '1234'/*user.password*/);\n\n    const login = await getUserToken(dispatch, userId); //  dispatch(signin(user.email, '1234'/*user.password*/));\n    //  debugger;\n    //  const {userSignin: {userInfo}} = getState();\n\n    const {\n      data\n    } = await Axios.get(`/api/linepay/confirm?transactionId=${transactionId}` // ,  \n    // {\n    //     headers:{\n    //         Authorization: `Bearer ${userInfo.token}`\n    //     }\n    // }\n    );\n    dispatch({\n      type: 'PAY_CONFIRM_SUCCESS',\n      payload: data\n    });\n  } catch (error) {// dispatch({\n    //     type: ORDER_CREATE_FAIL, \n    //     payload: error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message});\n  }\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/桌面/react-redux-project/refer-to-basir/yorton-dressing/frontend/src/actions/payConfirmActions.js"],"names":["Axios","USER_SIGNIN_SUCCESS","signin","getUser","id","data","get","getUserToken","dispatch","localStorage","setItem","JSON","stringify","type","payload","payConfirm","transactionId","userId","getState","user","login","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAGA,MAAMC,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAML,KAAK,CAACM,GAAN,CAAW,cAAaF,EAAG,EAA3B,CAArB;AACA,SAAOC,IAAP;AACH,CAHD,C,CAKA;AAEA;AACA;AACA;AACA;;;AAEA,MAAME,YAAY,GAAG,OAAOC,QAAP,EAAiBJ,EAAjB,KAAwB;AACzC,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAML,KAAK,CAACM,GAAN,CAAW,wBAAuBF,EAAG,EAArC,CAArB;AACA;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACAG,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE,mBAAP;AAA4BC,IAAAA,OAAO,EAAET;AAArC,GAAD,CAAR;AACH,CALD;;AAOA,OAAO,MAAMU,UAAU,GAAG,CAACC,aAAD,EAAgBC,MAAhB,KAA2B,OAAOT,QAAP,EAAiBU,QAAjB,KAA8B;AAE/E,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMhB,OAAO,CAACc,MAAD,CAA1B,CADD,CAGC;AACA;;AACA,UAAMG,KAAK,GAAG,MAAMb,YAAY,CAACC,QAAD,EAAWS,MAAX,CAAhC,CALD,CAOC;AACA;AACA;;AAEA,UAAM;AAACZ,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAW,sCAAqCU,aAAc,EAA9D,CACW;AACA;AACA;AACA;AACA;AACA;AANX,KAArB;AASAR,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,qBAAP;AAA8BC,MAAAA,OAAO,EAAET;AAAvC,KAAD,CAAR;AAEH,GAtBD,CAsBC,OAAMgB,KAAN,EAAY,CACT;AACA;AACA;AACA;AACA;AACH;AAEJ,CAhCM","sourcesContent":["import Axios from \"axios\";\r\nimport { USER_SIGNIN_SUCCESS } from \"../constants/userConstants\";\r\nimport { signin } from \"./userActions\";\r\n\r\n\r\nconst getUser = async (id) => {\r\n    const {data} = await Axios.get(`/api/users/${id}`);\r\n    return data;\r\n};\r\n\r\n// const signin = async (dispatch, email, password) => {\r\n\r\n//     const {data} = await Axios.post('/api/users/signin', {email, password});\r\n//     localStorage.setItem('userInfo', JSON.stringify(data));\r\n//     dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n// };\r\n\r\nconst getUserToken = async (dispatch, id) => {\r\n    const {data} = await Axios.get(`/api/users/userToken/${id}`);\r\n    debugger;\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    dispatch({type: 'PAY_CONFIRM_TOKEN', payload: data});\r\n};\r\n\r\nexport const payConfirm = (transactionId, userId) => async (dispatch, getState) => {\r\n\r\n    try{\r\n        const user = await getUser(userId);\r\n\r\n        //以登入資料取token\r\n        //const login = signin(dispatch, user.email, '1234'/*user.password*/);\r\n        const login = await getUserToken(dispatch, userId);\r\n\r\n        //  dispatch(signin(user.email, '1234'/*user.password*/));\r\n        //  debugger;\r\n        //  const {userSignin: {userInfo}} = getState();\r\n\r\n        const {data} = await Axios.get(`/api/linepay/confirm?transactionId=${transactionId}`\r\n                                        // ,  \r\n                                        // {\r\n                                        //     headers:{\r\n                                        //         Authorization: `Bearer ${userInfo.token}`\r\n                                        //     }\r\n                                        // }\r\n                                        );\r\n\r\n        dispatch({type: 'PAY_CONFIRM_SUCCESS', payload: data});\r\n\r\n    }catch(error){\r\n        // dispatch({\r\n        //     type: ORDER_CREATE_FAIL, \r\n        //     payload: error.response && error.response.data.message\r\n        //     ? error.response.data.message\r\n        //     : error.message});\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}