{"ast":null,"code":"import Axios from \"axios\";\n\nconst getUser = async id => {\n  const {\n    data\n  } = await Axios.get(`/api/users/${id}`);\n  return data;\n};\n\nconst signin = async (email, password) => {\n  const {\n    data\n  } = await Axios.post('/api/users/signin', {\n    email,\n    password\n  });\n  localStorage.setItem('userInfo', JSON.stringify(data));\n};\n\nexport const payConfirm = (transactionId, userId) => async (dispatch, getState) => {\n  try {\n    const user = await getUser(userId);\n    const login = signin(user.email, user.password); // dispatch(signin(user.email, user.password));\n    // debugger;\n    // const {userSignin: {userInfo}} = getState();\n\n    const {\n      data\n    } = await Axios.get(`/api/linepay/confirm?transactionId=${transactionId}` // ,  \n    // {\n    //     headers:{\n    //         Authorization: `Bearer ${userInfo.token}`\n    //     }\n    // }\n    );\n    dispatch({\n      type: 'ORDER_PAY_CONFIRM',\n      payload: data\n    });\n  } catch (error) {// dispatch({\n    //     type: ORDER_CREATE_FAIL, \n    //     payload: error.response && error.response.data.message\n    //     ? error.response.data.message\n    //     : error.message});\n  }\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/桌面/react-redux-project/refer-to-basir/yorton-dressing/frontend/src/actions/payConfirmActions.js"],"names":["Axios","getUser","id","data","get","signin","email","password","post","localStorage","setItem","JSON","stringify","payConfirm","transactionId","userId","dispatch","getState","user","login","type","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMH,KAAK,CAACI,GAAN,CAAW,cAAaF,EAAG,EAA3B,CAArB;AACA,SAAOC,IAAP;AACH,CAHD;;AAKA,MAAME,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAEtC,QAAM;AAACJ,IAAAA;AAAD,MAAS,MAAMH,KAAK,CAACQ,IAAN,CAAW,mBAAX,EAAgC;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAhC,CAArB;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAjC;AACH,CAJD;;AAMA,OAAO,MAAMU,UAAU,GAAG,CAACC,aAAD,EAAgBC,MAAhB,KAA2B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAE/E,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMjB,OAAO,CAACc,MAAD,CAA1B;AAEA,UAAMI,KAAK,GAAGd,MAAM,CAACa,IAAI,CAACZ,KAAN,EAAaY,IAAI,CAACX,QAAlB,CAApB,CAHD,CAKC;AACA;AACA;;AAEA,UAAM;AAACJ,MAAAA;AAAD,QAAS,MAAMH,KAAK,CAACI,GAAN,CAAW,sCAAqCU,aAAc,EAA9D,CACW;AACA;AACA;AACA;AACA;AACA;AANX,KAArB;AASAE,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE,mBAAP;AAA4BC,MAAAA,OAAO,EAAElB;AAArC,KAAD,CAAR;AAEH,GApBD,CAoBC,OAAMmB,KAAN,EAAY,CACT;AACA;AACA;AACA;AACA;AACH;AAEJ,CA9BM","sourcesContent":["import Axios from \"axios\";\r\n\r\n\r\nconst getUser = async (id) => {\r\n    const {data} = await Axios.get(`/api/users/${id}`);\r\n    return data;\r\n};\r\n\r\nconst signin = async (email, password) => {\r\n\r\n    const {data} = await Axios.post('/api/users/signin', {email, password});\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n};\r\n\r\nexport const payConfirm = (transactionId, userId) => async (dispatch, getState) => {\r\n\r\n    try{\r\n        const user = await getUser(userId);\r\n\r\n        const login = signin(user.email, user.password);\r\n\r\n        // dispatch(signin(user.email, user.password));\r\n        // debugger;\r\n        // const {userSignin: {userInfo}} = getState();\r\n\r\n        const {data} = await Axios.get(`/api/linepay/confirm?transactionId=${transactionId}`\r\n                                        // ,  \r\n                                        // {\r\n                                        //     headers:{\r\n                                        //         Authorization: `Bearer ${userInfo.token}`\r\n                                        //     }\r\n                                        // }\r\n                                        );\r\n\r\n        dispatch({type: 'ORDER_PAY_CONFIRM', payload: data});\r\n\r\n    }catch(error){\r\n        // dispatch({\r\n        //     type: ORDER_CREATE_FAIL, \r\n        //     payload: error.response && error.response.data.message\r\n        //     ? error.response.data.message\r\n        //     : error.message});\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}