{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const linePayData = await Axios.post(`/api/linepay/${order._id}`, order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    const {\n      data\n    } = await Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    debugger;\n\n    if (linePayData.data && linePayData.data.paymentUrl) {\n      data = { ...data,\n        paymentUrl: linePayData.data.paymentUrl\n      };\n    }\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/User/OneDrive/桌面/react-redux-project/refer-to-basir/yorton-dressing/frontend/src/actions/orderAction.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","linePayData","_id","put","paymentUrl","listOrderMine"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport {ORDER_CREATE_FAIL, \r\n        ORDER_CREATE_REQUEST, \r\n        ORDER_CREATE_SUCCESS, \r\n        ORDER_DETAILS_FAIL, \r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_MINE_LIST_FAIL,\r\n        ORDER_MINE_LIST_REQUEST,\r\n        ORDER_MINE_LIST_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try{\r\n        const {userSignin: {userInfo}} = getState();\r\n        const {data} = await Axios.post('/api/orders', order, \r\n                                        {\r\n                                            headers:{\r\n                                                Authorization: `Bearer ${userInfo.token}`\r\n                                            }\r\n                                        });\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n\r\n        localStorage.removeItem('cartItems');\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL, \r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message});\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) =>{\r\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try{\r\n        const {data} = await Axios.get(`/api/orders/${orderId}`,{\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\r\n\r\n    }catch(error){\r\n        const message = error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message;\r\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_PAY_REQUEST, payload: {order, paymentResult}});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try{\r\n\r\n        const linePayData = await Axios.post(`/api/linepay/${order._id}`,\r\n        order,\r\n        {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n\r\n        const {data} = await Axios.put(`/api/orders/${order._id}/pay`,\r\n        paymentResult,\r\n        {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        debugger;\r\n        if (linePayData.data && linePayData.data.paymentUrl){\r\n            data = {...data, paymentUrl: linePayData.data.paymentUrl};\r\n        }\r\n\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data});\r\n\r\n    }catch (error){\r\n        const message = error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\r\n    }\r\n};\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_MINE_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try{\r\n        const {data} = await Axios.get('/api/orders/mine', {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n\r\n        dispatch({type: ORDER_MINE_LIST_SUCCESS, payload: data});\r\n    }catch(error){\r\n        const message = error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message;\r\n        dispatch({type: ORDER_MINE_LIST_FAIL, payload: message});\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}